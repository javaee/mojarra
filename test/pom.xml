<?xml version="1.0" encoding="UTF-8"?>
<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 2017 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
    or packager/legal/LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at packager/legal/LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.sun.faces.test</groupId>
    <artifactId>pom</artifactId>
    <version>2.3.3.99</version>
    <packaging>pom</packaging>

    <name>Mojarra ${project.version} - Test</name>
    
    <properties>
        <jsf.artifactId>javax.faces</jsf.artifactId>
        <jsf.groupId>org.glassfish</jsf.groupId>
        <jsf.version>${project.version}</jsf.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <webapp.partialStateSaving>true</webapp.partialStateSaving>
        <webapp.projectStage>Production</webapp.projectStage>
        <webapp.stateSavingMethod>server</webapp.stateSavingMethod>
    </properties>
    
    <modules>
        <module>servlet30</module>
        <module>servlet30-isolated</module>
        <module>servlet31</module>
        <module>servlet40</module>
        <module>javaee6</module>
        <module>javaee6web</module>
        <module>javaee7</module>
        <module>javaee8</module>
        <module>htmlunitaware</module>
        
        <module>cluster</module>
        <module>osgi</module>
        <module>protocolaware</module>
        <module>glassfish</module>
        <module>weblogic</module>
    </modules>
    
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.6.1</version>
                </plugin>
                <plugin>                 
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.19.1</version>
                </plugin>                
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>2.19.1</version>
                </plugin>                
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>cargo-maven2-plugin</artifactId>
                    <version>1.6.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.wagon</groupId>
                    <artifactId>wagon-provider-api</artifactId>
                    <version>2.12</version>
                </plugin>
            </plugins>
        </pluginManagement>
        
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <inherited>true</inherited>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <inherited>true</inherited>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <inherited>true</inherited>
                <configuration>
                    <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
        </plugins>
    </build>
    
    <dependencies>
        <!--
        
            Until we have particular changes that will change the JSF API we
            can safely just rely on the javax/javaee-web-api. 
        
        <dependency>
            <groupId>javax.faces</groupId>
            <artifactId>javax.faces-api</artifactId>
            <version>2.3</version>
            <scope>provided</scope>
        </dependency>
        
            -->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.faces</artifactId>
            <version>${jsf.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>
        
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>2.37.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.faces</groupId>
            <artifactId>util</artifactId>
            <version>2.3.3.99</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <profiles>
        <profile>
            <id>glassfish-cargo</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <inherited>true</inherited>
                        
                        <executions>
                            <execution>
                                <id>start-container</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <timeout>2400000</timeout>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-container</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <timeout>2400000</timeout>
                                </configuration>
                            </execution>
                        </executions>                        
                        
                        <configuration>
                            <container>
                                <containerId>${glassfish.cargo.id}</containerId>
                                <type>installed</type>
                                <home>${glassfish.cargo.home}</home>
                                <timeout>24000000</timeout>
                            </container>
                            <configuration>
                                <type>${glassfish.cargo.configType}</type>
                                <home>${glassfish.cargo.config}</home>
                                <!-- 
                                <xmlReplacements>
                                    <xmlReplacement>
                                      <file>domain1/config/domain.xml</file>
                                      <xpathExpression>//configs/config/java-config/jvm-options[1]</xpathExpression>
                                      <value>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=9009</value>
                                    </xmlReplacement>
                                 </xmlReplacements>
                                  -->
                                <properties>
                                    <cargo.hostname>${glassfish.cargo.serverName}</cargo.hostname>
                                    <cargo.servlet.port>${glassfish.cargo.servletPort}</cargo.servlet.port>
                                    <cargo.glassfish.domain.name>${glassfish.cargo.domain}</cargo.glassfish.domain.name>
                                </properties>
                            </configuration>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <glassfish.cargo.home>C:/Glassfish4.0</glassfish.cargo.home>
                <glassfish.cargo.configType>standalone</glassfish.cargo.configType>
                <glassfish.cargo.config>${glassfish.cargo.home}/glassfish/domains</glassfish.cargo.config>
                <glassfish.cargo.domain>domain1</glassfish.cargo.domain>
                <glassfish.cargo.id>glassfish4x</glassfish.cargo.id>
                <glassfish.cargo.serverName>localhost</glassfish.cargo.serverName>
                <glassfish.cargo.servletPort>8080</glassfish.cargo.servletPort>
            </properties>
        </profile>
        
        <profile>
            <id>glassfish-deploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-container</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>=== Deploying ${project.build.finalName} to ${glassfish.deploy.home} ===</echo>
                                        <exec executable="${glassfish.deploy.home}/glassfish/bin/asadmin.bat" osfamily="windows">
                                            <arg line="deploy --force ${project.build.directory}/${project.build.finalName}.${project.packaging}"/>
                                        </exec>
                                        <exec executable="${glassfish.deploy.home}/glassfish/bin/asadmin" osfamily="unix">
                                            <arg line="deploy --force ${project.build.directory}/${project.build.finalName}.${project.packaging}"/>
                                        </exec>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>                    
                </plugins>
            </build>
            <properties>
                <glassfish.deploy.home>${user.home}/Glassfish4.1</glassfish.deploy.home>
            </properties>
        </profile>
        
        <profile>
            <id>glassfish-patch</id>
            <build>
                <plugins>
                    <plugin>                 
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy</id>                         
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.glassfish</groupId>
                                            <artifactId>javax.faces</artifactId>
                                            <version>${jsf.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>                                     
                                            <outputDirectory>${glassfish.patch.home}/glassfish/modules</outputDirectory>
                                            <destFileName>javax.faces.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.glassfish</groupId>
                    <artifactId>javax.faces</artifactId>
                    <version>${jsf.version}</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
            <properties>
                <glassfish.patch.home>${user.home}/Glassfish4.1</glassfish.patch.home>
            </properties>
        </profile>
        
        <profile>
            <id>glassfish-start</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-container</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>=== Starting ${glassfish.start.home} ===</echo>
                                        <exec executable="${glassfish.start.home}/glassfish/bin/asadmin.bat" osfamily="windows">
                                            <arg line="start-domain"/>
                                        </exec>
                                        <exec executable="${glassfish.start.home}/glassfish/bin/asadmin" osfamily="unix">
                                            <arg line="start-domain"/>
                                        </exec>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>                    
                </plugins>
            </build>
            <properties>
                <glassfish.start.home>${user.home}/Glassfish4.1</glassfish.start.home>
            </properties>
        </profile>
        
        <profile>
            <id>glassfish-stop</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>stop-container</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>=== Stopping ${glassfish.stop.home} ===</echo>
                                        <exec executable="${glassfish.stop.home}/glassfish/bin/asadmin.bat" osfamily="windows">
                                            <arg line="stop-domain"/>
                                        </exec>
                                        <exec executable="${glassfish.stop.home}/glassfish/bin/asadmin" osfamily="unix">
                                            <arg line="stop-domain"/>
                                        </exec>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>                    
                </plugins>
            </build>
            <properties>
                <glassfish.stop.home>${user.home}/Glassfish4.1</glassfish.stop.home>
            </properties>
        </profile>
        
        <profile>
            <id>glassfish-tck</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare</id>
                                <phase>validate</phase>
                                <configuration>
                                    <target>
                                        <unzip src="${glassfish.tck.zip.file}" dest=".." overwrite="true"/>
                                        <mkdir dir="../jsftck/report.dir"/>
                                        <mkdir dir="../jsftck/work.dir"/>
                                        <!--
                                            Initial release of TCK does not have an exclude file,
                                            so this is why the 3 lines below are currently commented out.
                                            
                                        <delete file="../ts.jtx" failonerror="false"/>
                                        <get src="${glassfish.tck.exclude.url}" dest="../ts.jtx"/>
                                        <copy force="true" file="../ts.jtx" tofile="../jsftck/bin/ts.jtx"/>
                                          -->
                                        <replaceregexp file="../jsftck/bin/ts.jte" 
                                                       match="sigTestClasspath=(.*)"
                                                       replace="sigTestClasspath=${sigTestClasspath}"
                                                       byline="true"/>
                                        <replaceregexp file="../jsftck/bin/ts.jte" 
                                                       match="jsf.classes=(.*)"
                                                       replace="jsf.classes=${jsfClasses}"
                                                       byline="true"/>
                                        <replaceregexp file="../jsftck/bin/ts.jte" 
                                                       match="jspservlet.classes=(.*)"
                                                       replace="jspservlet.classes=${jspServletClasses}"
                                                       byline="true"/>
                                        <replaceregexp file="../jsftck/bin/ts.jte" 
                                                       match="webServerHome=(.*)"
                                                       replace="webServerHome=${glassfishHome}"
                                                       byline="true"/>
                                        <replaceregexp file="../jsftck/bin/ts.jte" 
                                                       match="webServerPort=(.*)"
                                                       replace="webServerPort=${glassfishPort}"
                                                       byline="true"/>
                                        <replaceregexp file="../jsftck/bin/ts.jte" 
                                                       match="webServerHost=(.*)"
                                                       replace="webServerHost=${glassfishHost}"
                                                       byline="true"/>
                                        <replaceregexp file="../jsftck/bin/ts.jte" 
                                                       match="impl.vi=(.*)"
                                                       replace="impl.vi=glassfish"
                                                       byline="true"/>
                                        <replaceregexp file="../jsftck/bin/ts.jte" 
                                                       match="impl.vi.deploy.dir=(.*)"
                                                       replace="impl.vi.deploy.dir=${glassfishDeployDir}"
                                                       byline="true"/>
                                        <replaceregexp file="../jsftck/bin/ts.jte" 
                                                       match="impl.deploy.timeout.multiplier=(.*)"
                                                       replace="impl.deploy.timeout.multiplier=20"
                                                       byline="true"/>
                                        <ant antfile="${glassfish.tck.build.file}" target="deploy.all"/>
                                        <echo message="Waiting for deploy to settle down (5 minutes)"/>
                                        <sleep seconds="300"/>
                                        <ant antfile="${glassfish.tck.build.file}" target="run.all"/>
                                        <ant antfile="${glassfish.tck.build.file}" target="undeploy.all"/>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>ant-contrib</groupId>
                                <artifactId>ant-contrib</artifactId>
                                <version>1.0b3</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>ant</groupId>
                                        <artifactId>ant</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                        </dependencies>
                    </plugin>  
                </plugins>
            </build>
            <properties>
                <glassfish.tck.zip.file>tck.zip</glassfish.tck.zip.file>
                <glassfish.tck.build.file>jsftck/bin/build.xml</glassfish.tck.build.file>
                <glassfish.tck.exclude.url>http://localhost/js.tx</glassfish.tck.exclude.url>
            </properties>
        </profile>
        
        <profile>
            <id>glassfish-unzip</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare</id>
                                <phase>validate</phase>
                                <configuration>
                                    <target>
                                        <delete quiet="true" failonerror="false" dir="${glassfish.unzip.unzipDir}"/>
                                        <mkdir dir="${glassfish.unzip.unzipDir}"/>
                                        <unzip src="${glassfish.unzip.zipFile}" dest="${glassfish.unzip.unzipDir}"/>
                                        <exec executable="sh" osfamily="unix">
                                            <arg line='-c "chmod a+x ${glassfish.unzip.home}/glassfish/bin/*"'/>
                                        </exec>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>ant-contrib</groupId>
                                <artifactId>ant-contrib</artifactId>
                                <version>1.0b3</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>ant</groupId>
                                        <artifactId>ant</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                        </dependencies>
                    </plugin>                    
                </plugins>
            </build>
            <properties>
                <glassfish.unzip.unzipDir>C:/</glassfish.unzip.unzipDir>
                <glassfish.unzip.home>C:/glassfish4</glassfish.unzip.home>
                <glassfish.unzip.zipFile>C:/Downloads/Glassfish4.0.zip</glassfish.unzip.zipFile>
            </properties>
        </profile>
        
        <profile>
            <id>integration</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <inherited>true</inherited>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <systemPropertyVariables>
                                <integration.serverName>${integration.serverName}</integration.serverName>
                                <integration.serverPort>${integration.serverPort}</integration.serverPort>
                                <integration.serverProtocol>${integration.serverProtocol}</integration.serverProtocol>
                                <integration.url>${integration.protocol}://${integration.serverName}:${integration.serverPort}/${project.build.finalName}/</integration.url>
                                <jsf.version>${jsf.version}</jsf.version>
                                <jsf.serverString>${jsf.serverString}</jsf.serverString>
                                <project.build.finalName>${project.build.finalName}</project.build.finalName>
                                <project.build.sourceEncoding>${project.build.sourceEncoding}</project.build.sourceEncoding>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>                
                </plugins>
            </build>
            <properties>
                <integration.protocol>http</integration.protocol>
                <integration.serverName>localhost</integration.serverName>
                <integration.serverPort>8080</integration.serverPort>
            </properties>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-report-plugin</artifactId>
                        <reportSets>
                            <reportSet>
                                <id>integration-tests</id>
                                <reports>
                                    <report>failsafe-report-only</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        
        <profile>
            <id>integration-virtual</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <inherited>true</inherited>
                        <executions>
                            <execution>
                                <id>server1</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <integration.serverName>${integration.serverName1}</integration.serverName>
                                        <integration.serverPort>${integration.serverPort1}</integration.serverPort>
                                        <integration.serverProtocol>${integration.protocol}</integration.serverProtocol>
                                        <integration.url>${integration.protocol}://${integration.serverName1}:${integration.serverPort1}/${project.build.finalName}/</integration.url>
                                        <project.build.finalName>${project.build.finalName}</project.build.finalName>
                                        <project.build.sourceEncoding>${project.build.sourceEncoding}</project.build.sourceEncoding>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                            <execution>
                                <id>server2</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <integration.serverName>${integration.serverName2}</integration.serverName>
                                        <integration.serverPort>${integration.serverPort2}</integration.serverPort>
                                        <integration.serverProtocol>${integration.protocol}</integration.serverProtocol>
                                        <integration.url>${integration.protocol}://${integration.serverName2}:${integration.serverPort2}/${project.build.finalName}/</integration.url>
                                        <project.build.finalName>${project.build.finalName}</project.build.finalName>
                                        <project.build.sourceEncoding>${project.build.sourceEncoding}</project.build.sourceEncoding>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>                
                </plugins>
            </build>
            <properties>
                <integration.protocol>http</integration.protocol>
                <integration.serverName1>localhost</integration.serverName1>
                <integration.serverName2>localhost</integration.serverName2>
                <integration.serverPort1>8080</integration.serverPort1>
                <integration.serverPort2>8081</integration.serverPort2>
            </properties>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-report-plugin</artifactId>
                        <reportSets>
                            <reportSet>
                                <id>integration-tests</id>
                                <reports>
                                    <report>failsafe-report-only</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
        
        <profile>
            <id>patch</id>
            <build>
                <plugins>
                    <plugin>                 
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy</id>                         
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${patch.groupId}</groupId>
                                            <artifactId>${patch.artifactId}</artifactId>
                                            <version>${patch.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>                                     
                                            <outputDirectory>${patch.outputDirectory}</outputDirectory>
                                            <destFileName>${patch.destFilename}</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>tomcat-cargo</id>
            <build>
                <plugins>
                    <plugin>                 
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy</id>                         
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${jsf.groupId}</groupId>
                                            <artifactId>${jsf.artifactId}</artifactId>
                                            <version>${jsf.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>                                     
                                            <outputDirectory>${integration.container.extractDir}/apache-tomcat-${tomcat.version}/apache-tomcat-${tomcat.version}/lib</outputDirectory>
                                            <destFileName>javax.faces.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>javax.servlet.jsp.jstl</groupId> 
                                            <artifactId>jstl-api</artifactId> 
                                            <version>1.2</version> 
                                            <type>jar</type>
                                            <overWrite>true</overWrite>                                     
                                            <outputDirectory>${integration.container.extractDir}/apache-tomcat-${tomcat.version}/apache-tomcat-${tomcat.version}/lib</outputDirectory>
                                            <destFileName>jstl-api.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.glassfish.web</groupId>
                                            <artifactId>javax.servlet.jsp.jstl</artifactId>
                                            <version>1.2.1</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>                                     
                                            <outputDirectory>${integration.container.extractDir}/apache-tomcat-${tomcat.version}/apache-tomcat-${tomcat.version}/lib</outputDirectory>
                                            <destFileName>jstl-impl.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.glassfish.web</groupId>
                                            <artifactId>javax.el</artifactId>
                                            <version>2.2.6</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>                                     
                                            <outputDirectory>${integration.container.extractDir}/apache-tomcat-${tomcat.version}/apache-tomcat-${tomcat.version}/lib</outputDirectory>
                                            <destFileName>javax.el.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.jboss.weld.servlet</groupId>
                                            <artifactId>weld-servlet</artifactId>
                                            <version>2.4.1.Final</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>                                     
                                            <outputDirectory>${integration.container.extractDir}/apache-tomcat-${tomcat.version}/apache-tomcat-${tomcat.version}/lib</outputDirectory>
                                            <destFileName>weld-servlet.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <inherited>true</inherited>
                        <executions>
                            <execution>
                                <id>start-container</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <timeout>24000000</timeout>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-container</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <timeout>24000000</timeout>
                                </configuration>
                            </execution>
                        </executions>                        
                        <configuration>
                            <container>
                                <containerId>${integration.container.id}</containerId>
                                <zipUrlInstaller>
                                    <url>${integration.container.downloadUrl}</url>
                                    <downloadDir>${integration.container.downloadDir}</downloadDir>
                                    <extractDir>${integration.container.extractDir}</extractDir>
                                </zipUrlInstaller>
                                <timeout>2400000</timeout>
                                <type>installed</type>
                            </container>
                            <configuration>
                                <type>standalone</type>
                                <home>${integration.container.home}</home>
                                <properties>
                                    <cargo.hostname>${integration.serverName}</cargo.hostname>
                                    <cargo.servlet.port>${integration.serverPort}</cargo.servlet.port>
<!-- 
  Uncomment to cause Tomcat to be started with debugging enabled.  Make
  sure to pay attention to the value of the suspend parameter.

                                                                        <cargo.jvmargs>
                                                                          -Xdebug
                                                                          -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9009
                                                                          -Xnoagent
                                                                          -Djava.compiler=NONE
                                                                        </cargo.jvmargs>
                                    -->
                                </properties>
                            </configuration>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <integration.container.downloadDir>${session.executionRootDirectory}/target/container/download</integration.container.downloadDir>
                <integration.container.downloadUrl>http://archive.apache.org/dist/tomcat/tomcat-8/v8.5.11/bin/apache-tomcat-8.5.11.zip</integration.container.downloadUrl>
                <integration.container.extractDir>${session.executionRootDirectory}/target/container/extracts</integration.container.extractDir>
                <integration.container.home>${session.executionRootDirectory}/target/container/tomcat7</integration.container.home>
                <integration.container.id>tomcat8x</integration.container.id>
                <tomcat.version>8.5.11</tomcat.version>
            </properties>
        </profile>
        
        <profile>
            <id>weblogic-cargo</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.oracle.weblogic</groupId>
                        <artifactId>wls-maven-plugin</artifactId>
                        <version>12.1.3.0</version>
                        <inherited>true</inherited>
                        <executions>
                            <execution>
                                <id>deploy</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>undeploy</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>undeploy</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <weblogic.cargo.home>C:/Wls1214</weblogic.cargo.home>
                <weblogic.cargo.wlservername>myserver</weblogic.cargo.wlservername>
                <weblogic.cargo.username>admin</weblogic.cargo.username>
                <weblogic.cargo.password>adminadmin1</weblogic.cargo.password>
                <weblogic.cargo.wldomain>${weblogic.cargo.home}/user_projects/domains/mydomain</weblogic.cargo.wldomain>
                <weblogic.cargo.wlserver>${weblogic.cargo.home}/wlserver</weblogic.cargo.wlserver>
                <weblogic.cargo.memargs>-Xms512m -Xmx786m -XX:MaxPermSize=786m</weblogic.cargo.memargs>
                <adminurl>t3://localhost:7001</adminurl>
                <domainHome>${weblogic.cargo.wldomain}</domainHome>
                <middlewareHome>${weblogic.cargo.home}</middlewareHome>
                <weblogicHome>${weblogic.cargo.wlserver}</weblogicHome>
                <user>${weblogic.cargo.username}</user>
                <password>${weblogic.cargo.password}</password>
                <name>${project.build.finalName}</name>
                <failOnError>false</failOnError>
                <timeout>60</timeout>
            </properties>
        </profile>
        
        <profile>
            <id>weblogic-patch</id>
            <build>
                <plugins>
                    <plugin>                 
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy</id>                         
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>${jsf.groupId}</groupId>
                                            <artifactId>${jsf.artifactId}</artifactId>
                                            <version>${jsf.version}</version>
                                            <type>jar</type>
                                            <overWrite>true</overWrite>                                     
                                            <outputDirectory>${weblogic.patch.home}/tmp.mojarra</outputDirectory>
                                            <destFileName>javax.faces.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>                 
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create-wls.mojarra</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <delete failonerror="false" dir="${weblogic.patch.home}/tmp.mojarra" />
                                        <mkdir dir="${weblogic.patch.home}/tmp.mojarra/wls.mojarra" />
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>instrument-wls-with-mojarra</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <unzip src="${weblogic.patch.home}/${weblogic.patch.mojarraJarPath}/${weblogic.patch.mojarraJarName}"
                                               dest="${weblogic.patch.home}/tmp.mojarra/wls.mojarra" />
                                        <delete dir="${weblogic.patch.home}/tmp.mojarra/wls.mojarra/javax" />
                                        <delete dir="${weblogic.patch.home}/tmp.mojarra/wls.mojarra/com/sun" />
                                        <unzip src="${weblogic.patch.home}/tmp.mojarra/javax.faces.jar"
                                               dest="${weblogic.patch.home}/tmp.mojarra/wls.mojarra" />
                                        <zip destfile="${weblogic.patch.home}/tmp.mojarra/${weblogic.patch.mojarraJarName}"
                                             basedir="${weblogic.patch.home}/tmp.mojarra/wls.mojarra"
                                             update="true" />
                                        <copy overwrite="true"
                                              file="${weblogic.patch.home}/tmp.mojarra/${weblogic.patch.mojarraJarName}"
                                              tofile="${weblogic.patch.home}/${weblogic.patch.mojarraJarPath}/${weblogic.patch.mojarraJarName}" />
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <weblogic.patch.mojarraJarPath>wlserver/modules</weblogic.patch.mojarraJarPath>
                <weblogic.patch.mojarraJarName>glassfish.jsf.jar</weblogic.patch.mojarraJarName>
            </properties>
        </profile>
        
        <profile>
            <id>weblogic-start</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.oracle.weblogic</groupId>
                        <artifactId>wls-maven-plugin</artifactId>
                        <version>12.1.3.0</version>
                        <inherited>true</inherited>
                        <executions>
                            <execution>
                                <id>startServer</id>
                                <phase>install</phase>
                                <configuration>
                                    <script>
                                        startServer(
                                        'AdminServer', 'mydomain', 't3://localhost:7001', '${weblogic.cargo.username}',
                                        '${weblogic.cargo.password}', '${weblogic.cargo.wldomain}', jvmArgs='${weblogic.cargo.memargs}')
                                    </script>
                                </configuration>
                                <goals>
                                    <goal>wlst</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <weblogic.cargo.home>C:/Wls1214</weblogic.cargo.home>
                <weblogic.cargo.wlservername>myserver</weblogic.cargo.wlservername>
                <weblogic.cargo.username>admin</weblogic.cargo.username>
                <weblogic.cargo.password>adminadmin1</weblogic.cargo.password>
                <weblogic.cargo.wldomain>${weblogic.cargo.home}/user_projects/domains/mydomain</weblogic.cargo.wldomain>
                <weblogic.cargo.wlserver>${weblogic.cargo.home}/wlserver</weblogic.cargo.wlserver>
                <weblogic.cargo.memargs>-Xms512m, -Xmx786m, -XX:MaxPermSize=786m, -Xrs</weblogic.cargo.memargs>
                <domainHome>${weblogic.cargo.wldomain}</domainHome>
                <middlewareHome>${weblogic.cargo.home}</middlewareHome>
                <weblogicHome>${weblogic.cargo.wlserver}</weblogicHome>
                <user>${weblogic.cargo.username}</user>
                <password>${weblogic.cargo.password}</password>
                <name>${project.build.finalName}</name>
                <failOnError>false</failOnError>
                <timeout>60</timeout>
            </properties>
        </profile>
        
        <profile>
            <id>weblogic-unzip</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare</id>
                                <phase>validate</phase>
                                <configuration>
                                    <target>
                                        <delete quiet="true" failonerror="false" dir="${weblogic.unzip.unzipDir}"/>
                                        <mkdir dir="${weblogic.unzip.unzipDir}"/>
                                        <unzip src="${weblogic.unzip.zipFile}" dest="${weblogic.unzip.unzipDir}"/>
                                        <delete failonerror="false" dir="${weblogic.unzip.unzipDir}/wls/user_projects/domains/mydomain"/>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>ant-contrib</groupId>
                                <artifactId>ant-contrib</artifactId>
                                <version>1.0b3</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>ant</groupId>
                                        <artifactId>ant</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                        </dependencies>
                    </plugin>                    
                </plugins>
            </build>
            <properties>
                <weblogic.unzip.unzipDir>C:/</weblogic.unzip.unzipDir>
                <weblogic.unzip.zipFile>C:/Downloads/Weblogic12.1.2.zip</weblogic.unzip.zipFile>
            </properties>
        </profile>
    </profiles>

</project>
